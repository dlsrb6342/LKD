Which Bottom Half Should I Use?
    어떤 Bottom Half를 사용할지 결정하는 것은 굉장히 중요하다.

    Softirq
        softirq는 softirq handler가 필요하고 같은 type의 softirq가 동시에 다른 processor에서
        실행될 수 있기 때문에 shared data가 안전하다는 것을 확실히 할 필요가 있다.
        code가 highly threaded라면, softirq가 좋은 선택이 될 것이다. 
        timing-critical하고 high-frequency한 사용에서 가장 빠른 대안이다.

    Tasklet
        code가 정교하게 thread되지 않았다면 tasklet이 어울린다. 간단한 interface를 가지고,
        동시에 같은 type의 tasklet이 실행될 수 없기 때문에 구현하기 쉽다.
        만약 softirq가 동시에 multiprocessor에서 실행될 수 있는 per-processor variable utilize가 잘 안되어있다면
         tasklet을 선택해야 한다.

    Work Queue
        deferred work가 process context에서 실행되길 원한다면 work queue를 선택해야 한다.
        work queue는 kernel thread를 포함하고 그러므로 context switching을 하기 때문에 highest overhead를 가진다.
        그렇다고 work queue가 비효율적이라는 것은 아니지만 1초에 수천개의 interrupt가 있다면
         다른 방법이 더 좋을 것이다. 그러나 대부분의 상황에서는 work queue로도 충분하다.

    사용의 편의성은 work queue가 가장 좋다. default event queue를 쓰는 것은 애들 놀이같다.
    다음은 간단한 interface를 가지는 tasklet이 좋다. softirq는 static하게 만들어져야 하고 구현에 많은 신경을 써야하기 때문에
    가장 사용하기 힘들다.
